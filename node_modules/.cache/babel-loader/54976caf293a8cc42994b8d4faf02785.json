{"ast":null,"code":"var _jsxFileName = \"D:\\\\Devlopement\\\\Quiz-App-master\\\\src\\\\components\\\\Quiz.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport questions from \"../Questions\";\nimport Options from \"./Options\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"50%\",\n    margin: 'auto',\n    position: 'relative',\n    top: 150,\n    padding: '80px 0px 0px 0px',\n    borderRadius: '25px'\n  },\n  button: {\n    margin: 20\n  }\n}));\nexport default function Quiz() {\n  _s();\n\n  const [Qnumber, setQnumber] = useState(0);\n  const [responses, setresponses] = useState([]);\n  const [qIndex, setqIndex] = useState([]);\n\n  const nextQues = () => {\n    setQnumber(preQnumber => preQnumber + 1);\n    document.getElementById(`${qIndex[Qnumber]}`).checked = false;\n    localStorage.getItem(\"key\");\n  };\n\n  const prevQues = () => {\n    setQnumber(preQnumber => preQnumber - 1); // document.getElementById(`${qIndex[Qnumber]}`).checked = true;\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#FFC107\",\n        height: 720\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"FTS Quiz App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            position: \"relative\",\n            bottom: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: questions[Qnumber].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), questions[Qnumber].options.map((q, index) => /*#__PURE__*/_jsxDEV(Options, {\n            q: q,\n            responses: responses,\n            index: index,\n            qIndex: qIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              className: classes.button,\n              onClick: prevQues,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              className: classes.button,\n              onClick: nextQues,\n              children: \"Save and Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Quiz, \"zPclh8Rx+sK6e5JpNfN0gwtwAy4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["D:/Devlopement/Quiz-App-master/src/components/Quiz.jsx"],"names":["React","useState","makeStyles","Button","Paper","questions","Options","useStyles","theme","root","width","margin","position","top","padding","borderRadius","button","Quiz","Qnumber","setQnumber","responses","setresponses","qIndex","setqIndex","nextQues","preQnumber","document","getElementById","checked","localStorage","getItem","prevQues","classes","backgroundColor","height","textAlign","bottom","question","options","map","q","index","display","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,KADL;AAEFC,IAAAA,MAAM,EAAE,MAFN;AAGFC,IAAAA,QAAQ,EAAE,UAHR;AAIFC,IAAAA,GAAG,EAAE,GAJH;AAKFC,IAAAA,OAAO,EAAE,kBALP;AAMFC,IAAAA,YAAY,EAAE;AANZ,GAD+B;AASrCC,EAAAA,MAAM,EAAE;AACJL,IAAAA,MAAM,EAAE;AADJ;AAT6B,CAAZ,CAAD,CAA5B;AAcA,eAAe,SAASM,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMuB,QAAQ,GAAG,MAAM;AACnBL,IAAAA,UAAU,CAAEM,UAAD,IAAgBA,UAAU,GAAG,CAA9B,CAAV;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAyB,GAAEL,MAAM,CAACJ,OAAD,CAAU,EAA3C,EAA8CU,OAA9C,GAAwD,KAAxD;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB;AACH,GAJD;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACnBZ,IAAAA,UAAU,CAAEM,UAAD,IAAgBA,UAAU,GAAG,CAA9B,CAAV,CADmB,CAEnB;AACH,GAHD;;AAKA,QAAMO,OAAO,GAAGzB,SAAS,EAAzB;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAAC0B,QAAAA,eAAe,EAAE,SAAlB;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAAZ;AAAA,8BACA;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE,CAAlB;AAAqB,QAAA,SAAS,EAAEF,OAAO,CAACvB,IAAxC;AAAA,+BACI;AAAK,UAAA,KAAK,EAAE;AAAC0B,YAAAA,SAAS,EAAE,QAAZ;AAAsBvB,YAAAA,QAAQ,EAAE,UAAhC;AAA4CwB,YAAAA,MAAM,EAAE;AAApD,WAAZ;AAAA,kCACI;AAAA,sBAAI/B,SAAS,CAACa,OAAD,CAAT,CAAmBmB;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGKhC,SAAS,CAACa,OAAD,CAAT,CAAmBoB,OAAnB,CAA2BC,GAA3B,CAA+B,CAACC,CAAD,EAAIC,KAAJ,kBAC5B,QAAC,OAAD;AAAS,YAAA,CAAC,EAAED,CAAZ;AAAe,YAAA,SAAS,EAAEpB,SAA1B;AAAqC,YAAA,KAAK,EAAEqB,KAA5C;AAAmD,YAAA,MAAM,EAAEnB;AAA3D;AAAA;AAAA;AAAA;AAAA,kBADH,CAHL,eAOI;AAAK,YAAA,KAAK,EAAE;AAACoB,cAAAA,OAAO,EAAE,MAAV;AAAkBC,cAAAA,cAAc,EAAE;AAAlC,aAAZ;AAAA,oCACI,QAAC,MAAD;AACI,cAAA,OAAO,EAAC,WADZ;AAEI,cAAA,KAAK,EAAC,WAFV;AAGI,cAAA,SAAS,EAAEX,OAAO,CAAChB,MAHvB;AAII,cAAA,OAAO,EAAEe,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eASI,QAAC,MAAD;AACI,cAAA,OAAO,EAAC,WADZ;AAEI,cAAA,KAAK,EAAC,WAFV;AAGI,cAAA,SAAS,EAAEC,OAAO,CAAChB,MAHvB;AAII,cAAA,OAAO,EAAEQ,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAoCH;;GApDuBP,I;UAeJV,S;;;KAfIU,I","sourcesContent":["import React, {useState} from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport questions from \"../Questions\";\nimport Options from \"./Options\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"50%\",\n        margin: 'auto',\n        position: 'relative',\n        top: 150,\n        padding: '80px 0px 0px 0px',\n        borderRadius: '25px'\n    },\n    button: {\n        margin: 20\n    }\n}));\n\nexport default function Quiz() {\n    const [Qnumber, setQnumber] = useState(0);\n    const [responses, setresponses] = useState([]);\n    const [qIndex, setqIndex] = useState([]);\n    const nextQues = () => {\n        setQnumber((preQnumber) => preQnumber + 1);\n        document.getElementById(`${qIndex[Qnumber]}`).checked = false;\n        localStorage.getItem(\"key\")\n    }\n\n    const prevQues = () => {\n        setQnumber((preQnumber) => preQnumber - 1);\n        // document.getElementById(`${qIndex[Qnumber]}`).checked = true;\n    }\n\n    const classes = useStyles();\n    return (\n        <>\n            <div style={{backgroundColor: \"#FFC107\", height: 720}}>\n            <h1 className=\"heading\">FTS Quiz App</h1>\n            <Paper elevation={3} className={classes.root}>\n                <div style={{textAlign: \"center\", position: \"relative\", bottom: 10}}>\n                    <p>{questions[Qnumber].question}</p>\n\n                    {questions[Qnumber].options.map((q, index) => (\n                        <Options q={q} responses={responses} index={index} qIndex={qIndex}/>\n                    ))}\n\n                    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                        <Button \n                            variant=\"contained\"\n                            color=\"secondary\" \n                            className={classes.button} \n                            onClick={prevQues}\n                        >\n                            Back\n                        </Button>\n                        <Button \n                            variant=\"contained\"\n                            color=\"secondary\" \n                            className={classes.button} \n                            onClick={nextQues}\n                        >\n                            Save and Next\n                        </Button>\n                        \n                    </div> \n                </div>\n            </Paper>\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}